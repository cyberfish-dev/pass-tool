// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

/// Generates a random password using OS-provided secure randomness.
///
/// # Arguments
///
/// * `length` - Desired total length of the password.
/// * `include_lower` - Include lowercase letters (`a-z`).
/// * `include_upper` - Include uppercase letters (`A-Z`).
/// * `include_digits` - Include digits (`0-9`).
/// * `include_symbols` - Include symbols (`!@#$%^&*()-_=+[]{};:,.<>/?|`).
/// * `min_digits` - Minimum number of numeric digits (`0-9`) to include (only if `include_digits`).
/// * `min_symbols` - Minimum number of symbols to include (only if `include_symbols`).
///
/// # Panics
///
/// Panics if no character sets are selected or if sums of minimums exceed `length`.
String generatePassword({
  required BigInt length,
  required bool includeLower,
  required bool includeUpper,
  required bool includeDigits,
  required bool includeSymbols,
  required BigInt minDigits,
  required BigInt minSymbols,
}) => RustLib.instance.api.crateApiGeneratorGeneratePassword(
  length: length,
  includeLower: includeLower,
  includeUpper: includeUpper,
  includeDigits: includeDigits,
  includeSymbols: includeSymbols,
  minDigits: minDigits,
  minSymbols: minSymbols,
);
