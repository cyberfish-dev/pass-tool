// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.10.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'vault_models.dart';

// These functions are ignored because they are not marked as `pub`: `add_generic_entry`, `update_vault_meta`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `fmt`, `fmt`, `from`, `from`, `from`

VaultManager createVaultManager({
  required String rootPath,
  required String password,
}) => RustLib.instance.api.crateApiVaultManagerCreateVaultManager(
  rootPath: rootPath,
  password: password,
);

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<VaultManager>>
abstract class VaultManager implements RustOpaqueInterface {
  void addCreditCardRecord({
    required String name,
    String? folder,
    String? icon,
    required CreditCardRecord record,
  });

  Folder addFolder({required String name});

  void addLoginRecord({
    required String name,
    String? folder,
    String? icon,
    required LoginRecord record,
  });

  void addNoteRecord({
    required String name,
    String? folder,
    String? icon,
    required SecureNoteRecord record,
  });

  static Future<VaultManager> default_() =>
      RustLib.instance.api.crateApiVaultManagerVaultManagerDefault();

  VaultMetadataVault getMetadata();

  bool removeFolder({required String id});
}

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<VaultManagerError>>
abstract class VaultManagerError implements RustOpaqueInterface {}
